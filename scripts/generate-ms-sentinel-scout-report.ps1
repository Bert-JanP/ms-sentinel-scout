# run-kql-rest-html.ps1
$ErrorActionPreference = 'Stop'

# Input from environment
$clientId     = $env:AZURE_CLIENT_ID
$clientSecret = $env:AZURE_CLIENT_SECRET
$tenantId     = $env:AZURE_TENANT_ID
$workspaceId  = $env:LOG_ANALYTICS_WORKSPACE_ID

# Output file
$outputPath = "./ms-sentinel-scout-report.html"

# Load queries
$queries = Get-Content "./scripts/kql-queries.txt" | Where-Object { $_.Trim() -ne "" }

# Bootstrap HTML layout
$dateNow = Get-Date -Format "MMMM dd, yyyy"
$html = @"
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Microsoft Sentinel Scout Report</title>
  <style>
    body {
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
      background-color: #f8f9fa;
      margin: 0;
      padding: 0;
    }
    .container {
      max-width: 1000px;
      margin: auto;
      padding: 40px;
      background-color: #fff;
      box-shadow: 0 0 10px rgba(0,0,0,0.1);
    }
    header {
      border-bottom: 2px solid #dee2e6;
      padding-bottom: 10px;
      margin-bottom: 30px;
    }
    h1 { color: #343a40; }
    h2 { color: #0078d4; border-bottom: 1px solid #dee2e6; padding-bottom: 6px; }
    table {
      width: 100%;
      border-collapse: collapse;
      margin-top: 15px;
    }
    th, td {
      padding: 12px 15px;
      border: 1px solid #dee2e6;
      text-align: left;
    }
    th {
      background-color: #f1f3f5;
    }
    .status-ok { color: green; font-weight: bold; }
    .status-warning { color: orange; font-weight: bold; }
    .status-error { color: red; font-weight: bold; }
    .section { margin-bottom: 40px; }
    footer {
      margin-top: 40px;
      font-size: 0.85em;
      color: #6c757d;
      text-align: center;
    }
  </style>
</head>
<body>
<div class="container">
<header>
  <h1>Microsoft Sentinel Assessment Report</h1>
  <p><strong>Date:</strong> $dateNow</p>
  <p><strong>Generated By:</strong> Microsoft Sentinel Scout</p>
</header>
"@

function Get-AccessToken {
    Write-Host "üîê Authenticating..." -ForegroundColor Cyan
    $body = @{
        client_id     = $clientId
        client_secret = $clientSecret
        scope         = "https://api.loganalytics.io/.default"
        grant_type    = "client_credentials"
    }
    $tokenUri = "https://login.microsoftonline.com/$tenantId/oauth2/v2.0/token"

    $response = Invoke-RestMethod -Method POST -Uri $tokenUri -Body $body -ContentType "application/x-www-form-urlencoded"
    return $response.access_token
}

function Run-KqlQuery {
    param (
        [string]$AccessToken,
        [string]$Query
    )
    $url = "https://api.loganalytics.io/v1/workspaces/$workspaceId/query"
    $headers = @{
        "Authorization" = "Bearer $AccessToken"
        "Content-Type"  = "application/json"
    }
    $body = @{ query = $Query } | ConvertTo-Json -Depth 3
    try {
        return Invoke-RestMethod -Method Post -Uri $url -Headers $headers -Body $body
    } catch {
        return @{ error = $_.Exception.Message }
    }
}

# Get token
$token = Get-AccessToken

# Run each query
$i = 1
foreach ($query in $queries) {
    Write-Host "`nüîç Running Query $i..." -ForegroundColor Cyan
    Write-Host "$query" -ForegroundColor Gray
    $querytitle = $query.split('>>')[0]
    $querytext = $query.split('>>')[1]
    $html += "<div class='section'><h2>$querytitle</h2><p><code>$query</code></p>"

    $result = Run-KqlQuery -AccessToken $token -Query $querytext

    if ($result.error) {
        Write-Host "‚ùå Error: $($result.error)" -ForegroundColor Red
        $html += "<p class='status-error'>Error: $($result.error)</p></div>"
        $i++
        continue
    }

    if (-not $result.tables) {
        Write-Host "‚ö†Ô∏è No tables returned." -ForegroundColor Yellow
        $html += "<p class='status-warning'>No results returned.</p></div>"
        $i++
        continue
    }

    $columns = $result.tables[0].columns.name
    $rows = $result.tables[0].rows

    if ($rows.Count -eq 0) {
        Write-Host "‚ö†Ô∏è Query returned 0 rows." -ForegroundColor Yellow
        $html += "<p class='status-warning'>Query returned 0 rows.</p></div>"
        $i++
        continue
    }

    $html += "<table><thead><tr>"
    foreach ($col in $columns) {
        $html += "<th>$col</th>"
    }
    $html += "</tr></thead><tbody>"

    foreach ($row in $rows) {
        $html += "<tr>"
        foreach ($cell in $row) {
            $html += "<td>$cell</td>"
        }
        $html += "</tr>"
    }

    $html += "</tbody></table></div>"
    $i++
}

# Close HTML
$html += @"
<footer>
  ¬© $(Get-Date -Format "yyyy") Microsoft Cloud Security Team. This is an automated report generated for pre-deployment verification.
</footer>
</div>
</body>
</html>
"@

# Save to file
$html | Set-Content -Path $outputPath -Encoding UTF8

Write-Host "`n‚úÖ Report generated: $outputPath" -ForegroundColor Green
